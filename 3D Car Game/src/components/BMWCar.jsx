/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/bmw/scene.gltf 
Author: rifdanzz (https://sketchfab.com/rifdanzz)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/bmw-320i-e90-low-polly-28f0bc2f0083417a8e521150529034d6
Title: BMW 320i E90 Low Polly
*/
import React, { useRef, useEffect } from "react";
import { Environment, useGLTF } from "@react-three/drei";
import { RigidBody } from "@react-three/rapier";
import { useFrame } from "@react-three/fiber";
import * as THREE from "three";

const speed = 50; // Adjust for smoother control
const rotationSpeed = 0.05; // Rotation speed for turning

export function BMWCar(props) {
  const { nodes, materials } = useGLTF("/models/bmw/scene.gltf");
  const car = useRef();
  const direction = useRef(0); // Current rotation (in radians)

  // Set initial light colors to normal red
  useEffect(() => {
    if (materials["Material.005"]) {
      materials["Material.005"].color.set("#f26d6d");
      materials["Material.005"].emissive.set("#f26d6d");
    }
    if (materials["Material.002"]) {
      materials["Material.002"].color.set("#f26d6d");
      materials["Material.002"].emissive.set("#f26d6d");
    }
  }, [materials]);

  // Combined keydown and keyup event listeners
  useEffect(() => {
    const handleKeyDown = (event) => {
      if (!car.current) return;

      switch (event.key) {
        case "ArrowUp": {
          // Move the car forward based on its current direction
          const forwardX = Math.sin(direction.current) * speed;
          const forwardZ = Math.cos(direction.current) * speed;
          car.current.applyImpulse({ x: forwardX, y: 0, z: forwardZ }, true);
          break;
        }
        case "ArrowDown": {
          // Set lights to a darker red when moving backward
          if (materials["Material.005"]) {
            materials["Material.005"].color.set("#e33030");
            materials["Material.005"].emissive.set("#e33030");
          }
          if (materials["Material.002"]) {
            materials["Material.002"].color.set("#e33030");
            materials["Material.002"].emissive.set("#e33030");
          }
          // Move the car backward based on its current direction
          const backwardX = -Math.sin(direction.current) * speed;
          const backwardZ = -Math.cos(direction.current) * speed;
          car.current.applyImpulse({ x: backwardX, y: 0, z: backwardZ }, true);
          break;
        }
        case "ArrowLeft": {
          // Rotate the car to the left
          direction.current += rotationSpeed;
          const quaternion = new THREE.Quaternion();
          quaternion.setFromEuler(new THREE.Euler(0, direction.current, 0));
          car.current.setRotation(quaternion, true);
          break;
        }
        case "ArrowRight": {
          // Rotate the car to the right
          direction.current -= rotationSpeed;
          const quaternion = new THREE.Quaternion();
          quaternion.setFromEuler(new THREE.Euler(0, direction.current, 0));
          car.current.setRotation(quaternion, true);
          break;
        }
        case "Space": {
          // Make the car jump
          car.current.applyImpulse({ x: 0, y: 500, z: 0 }, true);
          break;
        }
        default:
          break;
      }
    };

    const handleKeyUp = (event) => {
      if (!materials) return;
      if (event.key === "ArrowDown") {
        // Revert lights back to normal red when ArrowDown is released
        if (materials["Material.005"]) {
          materials["Material.005"].color.set("#f26d6d");
          materials["Material.005"].emissive.set("#f26d6d");
        }
        if (materials["Material.002"]) {
          materials["Material.002"].color.set("#f26d6d");
          materials["Material.002"].emissive.set("#f26d6d");
        }
      }
    };

    window.addEventListener("keydown", handleKeyDown);
    window.addEventListener("keyup", handleKeyUp);
    return () => {
      window.removeEventListener("keydown", handleKeyDown);
      window.removeEventListener("keyup", handleKeyUp);
    };
  }, [materials]);

  // Smooth camera following the car
  useFrame((state) => {
    if (car.current) {
      const carPosition = car.current.translation();

      // Calculate camera position to stay behind the car
      const cameraOffsetX = Math.sin(direction.current) * 10;
      const cameraOffsetZ = Math.cos(direction.current) * 10;

      state.camera.position.set(
        carPosition.x - cameraOffsetX,
        carPosition.y + 5, // Slightly above the car
        carPosition.z - cameraOffsetZ
      );

      // Make the camera look at the car
      state.camera.lookAt(carPosition.x, carPosition.y, carPosition.z);
      state.camera.fov = 50;
    }
  });

  return (
    <>
      <RigidBody
        colliders="hull"
        scale={0.02}
        ref={car}
        rotation={[0, 6.5, 0]}
        position={[10, 5, 50]}
        type="dynamic"
        mass={0}
        friction={0}
        linearDamping={0.7} // Helps smooth out movement
      >
        <Environment preset="city" background={false} />

        <group {...props} dispose={null} position={[10, 3, 50]} ref={car}>
          <group
            position={[-68.955, 17.091, 139.239]}
            rotation={[Math.PI / 2, -Math.PI / 2, 0]}
            scale={31.842}
          >
            <mesh
              geometry={nodes.Circle002_velg_0.geometry}
              material={materials.velg}
            />
            <mesh
              geometry={nodes.Circle002_Material001_0.geometry}
              material={materials["Material.001"]}
            />
            <mesh
              geometry={nodes.Circle002_Material004_0.geometry}
              material={materials["Material.004"]}
            />
          </group>
          <group
            position={[76.42, 17.104, 139.234]}
            rotation={[-Math.PI / 2, Math.PI / 2, 0]}
            scale={31.842}
          >
            <mesh
              geometry={nodes.Circle003_velg_0.geometry}
              material={materials.velg}
            />
            <mesh
              geometry={nodes.Circle003_Material001_0.geometry}
              material={materials["Material.001"]}
            />
            <mesh
              geometry={nodes.Circle003_Material009_0.geometry}
              material={materials["Material.009"]}
            />
          </group>
          <group
            position={[67.205, 17.091, -138.696]}
            rotation={[-Math.PI / 2, Math.PI / 2, 0]}
            scale={31.842}
          >
            <mesh
              geometry={nodes.Circle004_velg_0.geometry}
              material={materials.velg}
            />
            <mesh
              geometry={nodes.Circle004_Material001_0.geometry}
              material={materials["Material.001"]}
            />
            <mesh
              geometry={nodes.Circle004_Material004_0.geometry}
              material={materials["Material.004"]}
            />
          </group>
          <group
            position={[-68.955, 17.091, -138.696]}
            rotation={[Math.PI / 2, -Math.PI / 2, 0]}
            scale={31.842}
          >
            <mesh
              geometry={nodes.Circle005_velg_0.geometry}
              material={materials.velg}
            />
            <mesh
              geometry={nodes.Circle005_Material001_0.geometry}
              material={materials["Material.001"]}
            />
            <mesh
              geometry={nodes.Circle005_Material004_0.geometry}
              material={materials["Material.004"]}
            />
          </group>
          <group
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          >
            <mesh
              geometry={nodes.Plane009_Material003_0.geometry}
              material={materials.material_0}
            />
            <mesh
              geometry={nodes.Plane009_Material004_0.geometry}
              material={materials["Material.004"]}
            />
          </group>
          <group
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          >
            <mesh
              geometry={nodes.Plane010_Material003_0.geometry}
              material={materials.material_0}
            />
            <mesh
              geometry={nodes.Plane010_Material004_0.geometry}
              material={materials["Material.004"]}
            />
          </group>
          <group
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          >
            <mesh
              geometry={nodes.Plane015_glass_0.geometry}
              material={materials.glass}
            />
            <mesh
              geometry={nodes.Plane015_Material004_0.geometry}
              material={materials["Material.004"]}
            />
          </group>
          <mesh
            geometry={nodes.Circle_Material005_0.geometry}
            material={materials["Material.005"]}
            position={[0, 63.529, 191.14]}
            rotation={[-1.21, 0, 0]}
            scale={4.629}
          />
          <mesh
            geometry={nodes.Circle001_Material005_0.geometry}
            material={materials["Material.005"]}
            position={[0, 79.076, -229.819]}
            rotation={[3.05, 0, Math.PI]}
            scale={3.374}
          />
          <mesh
            geometry={nodes.Circle006_Material001_0.geometry}
            material={materials["Material.001"]}
            position={[36.123, 13.063, -233.381]}
            scale={3.319}
          />
          <mesh
            geometry={nodes.Circle007_Material001_0.geometry}
            material={materials["Material.001"]}
            position={[44.405, 13.063, -233.381]}
            scale={3.319}
          />
          <mesh
            geometry={nodes.Cube_Material003_0.geometry}
            material={materials.material_0}
            position={[0, 18.503, 206]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[65.861, 2.375, 0.568]}
          />
          <mesh
            geometry={nodes.Cube001_Material008_0.geometry}
            material={materials["Material.008"]}
            position={[36.166, 97.547, -52.398]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={11.531}
          />
          <mesh
            geometry={nodes.Cube002_Material008_0.geometry}
            material={materials["Material.008"]}
            position={[-37.532, 97.547, -52.398]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={11.531}
          />
          <mesh
            geometry={nodes.Cube003_Material008_0.geometry}
            material={materials["Material.008"]}
            position={[46.545, 97.547, -124.107]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={11.531}
          />
          <mesh
            geometry={nodes.Cube004_Material003_0.geometry}
            material={materials.material_0}
            position={[0, 82.567, 43.26]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={108.495}
          />
          <mesh
            geometry={nodes.Kapdepan_Material003_0.geometry}
            material={materials.material_0}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.lampudepan_Material002_0.geometry}
            material={materials["Material.002"]}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane001_Material003_0.geometry}
            material={materials.material_0}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane002_Material003_0.geometry}
            material={materials.material_0}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane003_Material003_0.geometry}
            material={materials.material_0}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane004_Material002_0.geometry}
            material={materials["Material.002"]}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane005_Material006_0.geometry}
            material={materials["Material.006"]}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane006_Material006_0.geometry}
            material={materials["Material.006"]}
            position={[0, 82.837, 114.902]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane007_Material003_0.geometry}
            material={materials.material_0}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane008_Material003_0.geometry}
            material={materials.material_0}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane011_Material003_0.geometry}
            material={materials.material_0}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane012_Material003_0.geometry}
            material={materials.material_0}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane013_glass_0.geometry}
            material={materials.glass}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane014_glass_0.geometry}
            material={materials.glass}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane016_glass_0.geometry}
            material={materials.glass}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane017_glass_0.geometry}
            material={materials.glass}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane018_Material006_0.geometry}
            material={materials["Material.006"]}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane019_Material003_0.geometry}
            material={materials.material_0}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane020_Material003_0.geometry}
            material={materials.material_0}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane021_Material001_0.geometry}
            material={materials["Material.001"]}
            position={[0, 82.839, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={21.635}
          />
          <mesh
            geometry={nodes.Plane022_Material001_0.geometry}
            material={materials["Material.001"]}
            position={[0, 114.156, 114.78]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[10.997, 21.635, 21.635]}
          />
          <mesh
            geometry={nodes.Text__0.geometry}
            material={materials.Text__0}
            position={[6.381, 89.742, -8.885]}
            scale={18.308}
          />
        </group>
      </RigidBody>
    </>
  );
}

useGLTF.preload("/models/bmw/scene.gltf");
